name: Pipeline

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1

jobs:


  build:
    runs-on: ubuntu-latest
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:

          - preset: HTML5
            path: ./dist/html5/index.html
            name: HTML5
            upload: godot/dist/html5/*

          - preset: Linux/X11
            path: ./dist/lin/moon.linux.x86_64
            name: Linux
            upload: godot/dist/lin/*

          - preset: Windows Desktop
            path: ./dist/win/moon.windows.x86_64.exe
            name: Windows
            upload: godot/dist/win/*

          - preset: macOS
            path: ./dist/mac/moon.macos.zip
            name: MacOS
            upload: godot/dist/mac/*

    steps:

      - uses: actions/checkout@v3

      - run: mkdir -p godot/"$(dirname '${{ matrix.path }}')"

      - run: docker build -t ghcr.io/itsas-taldea/godot/export container

      - run: >-
          docker run --rm
          -v $(pwd):/wrk -w /wrk/godot
          ghcr.io/itsas-taldea/godot/export
          gexport --export-release '${{ matrix.preset }}' '${{ matrix.path }}'

      - name: 'ðŸ“¤ Upload artifact'
        uses: 'actions/upload-artifact@v3'
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.upload }}
          if-no-files-found: error


  doc:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - run: python3 -m pip install -r doc/requirements.txt

      - run: make -C doc html

      - name: 'ðŸ“¤ Upload artifact'
        uses: 'actions/upload-artifact@v3'
        with:
          name: doc
          path: doc/_build/html
          if-no-files-found: error


  pages:
    needs:
      - build
      - doc
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: 'ðŸ“¥ Download artifacts: doc'
        uses: actions/download-artifact@v3
        with:
          name: doc
          path: public

      - name: 'ðŸ“¥ Download artifacts: HTML5'
        uses: actions/download-artifact@v3
        with:
          name: HTML5
          path: public/play

      - run: tree public

      # Workaround for SharedArrayBuffer support on GitHub Pages
      # See: https://github.com/godotengine/godot-docs/issues/7084
      - run: |
          cd public/play
          curl -fsSL https://github.com/gzuidhof/coi-serviceworker/raw/master/coi-serviceworker.js > coi-serviceworker.js
          sed -i 's#\(		<script src="index.js"></script>\)#		<script src="coi-serviceworker.js"></script>\n\1#g' index.html

      - name: ðŸš€ Publish to GitHub Pages
        if: (github.event_name != 'pull_request')
        run: |
          cd public
          touch .nojekyll
          git init
          cp ../.git/config ./.git/config
          git add .
          git config --local user.email "godot@GitHubActions"
          git config --local user.name "GitHub Actions"
          git commit -a -m "update ${{ github.sha }}"
          git push -u origin +HEAD:gh-pages


  tip:
    name: 'ðŸš€ Update tip'
    if: (github.event_name != 'pull_request') && (github.ref == 'refs/heads/main')
    needs: build
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: 'ðŸ“¥ Download artifacts'
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Prepare assets
        run: |
          sudo apt update -qq
          sudo apt install -y coreutils
          mkdir tip
          cd artifacts
          tree
          cp Linux/moon.linux.x86_64 ./Windows/moon.windows.x86_64.exe MacOS/moon.macos.zip ../tip/

      - name: Upload artifacts as assets of pre-release 'tip'
        run: GITHUB_TOKEN='${{ github.token }}' gh release upload --clobber tip tip/*

      - name: Push tag 'tip' forward
        run: |
          git tag tip
          git push origin +tip
